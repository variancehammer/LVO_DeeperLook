frequenciesLiberia <- freq(rawLiberia$Iteration, plot = FALSE)
plot(density(log(frequenciesLiberia[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n', cex=1)
rawSL <- read.table("/Users/elofgren/Documents/Code/DTRA_StochExtinction/Results/BigStoch_SL.EFO", header=FALSE,colClasses=c("integer","integer","integer","integer"))
colnames(rawSL) <- cols
survtimeSL <- ddply(rawSL, "Iteration", summarize, max = max(ExposureDay))
maxtime <- 365*2
extinct_threshold <- 42
survtimeSL$extinct <- 0
survtimeSL$extinct[survtimeSL$max<(maxtime-extinct_threshold)] <- 1
## Sierra Leone Information ##
xlimit <- max(survtimeSL$max)+10
b <- survfit(Surv(survtimeSL$max,survtimeSL$extinct)~1)
plot(b,xlab="Days",ylab="Proportion of Epidemics Ongoing",
lwd=c(3,1,1),col=c("darkred","grey30","grey30"),xlim=c(0,xlimit), mark.time=FALSE)
legend("topright", c("Kaplan-Meier Estimate","95% CI"), lwd=2, col=c("darkred","grey30"),
lty=c(1,2), bty='n', cex=1)
median(survtimeSL$max)
min(survtimeSL$max)
max(survtimeSL$max)
1 - mean(survtimeSL$extinct)
frequenciesSL <- freq(rawSL$Iteration, plot = FALSE)
plot(density(log(frequenciesLiberia[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n', cex=1)
library(plyr)
library(survival)
library(descr)
cols <- c("ID","Iteration","ExposureDay","Infector")
rawLiberia <- read.table("/Users/elofgren/Documents/Code/DTRA_StochExtinction/Results/BigStoch_Liberia.EFO", header=FALSE,colClasses=c("integer","integer","integer","integer"))
colnames(rawLiberia) <- cols
survtimeLiberia <- ddply(rawLiberia, "Iteration", summarize, max = max(ExposureDay))
maxtime <- 365*2
extinct_threshold <- 42
survtimeLiberia$extinct <- 0
survtimeLiberia$extinct[survtimeLiberia$max<(maxtime-extinct_threshold)] <- 1
# Historical Outbreak Information
episize <- c(67,77,24,32,149,264,17,35,143,122,425,60,2,37,315,1+runif(n=1,min=0,max=0.5),52,34,1+runif(n=1,min=0,max=0.5),318,284,3652,10666,12827,1+runif(n=1,min=0,max=0.5),8,20,1+runif(n=1,min=0,max=0.5),1+runif(n=1,min=0,max=0.5),1+runif(n=1,min=0,max=0.5),6,4)
epitime <- (77)
## Liberia Information ##
xlimit <- max(survtimeLiberia$max)+10
b <- survfit(Surv(survtimeLiberia$max,survtimeLiberia$extinct)~1)
plot(b,xlab="Epidemic Duration (Days)",ylab="Proportion of Epidemics Ongoing",
lwd=c(3,1,1),col=c("darkred","grey30","grey30"),xlim=c(0,xlimit), mark.time=FALSE)
legend("topright", c("Kaplan-Meier Estimate","95% CI"), lwd=2, col=c("darkred","grey30"),
lty=c(1,2), bty='n', cex=1)
median(survtimeLiberia$max)
min(survtimeLiberia$max)
max(survtimeLiberia$max)
1 - mean(survtimeLiberia$extinct)
frequenciesLiberia <- freq(rawLiberia$Iteration, plot = FALSE)
plot(density(log(frequenciesLiberia[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n', cex=1)
rawSL <- read.table("/Users/elofgren/Documents/Code/DTRA_StochExtinction/Results/BigStoch_SL.EFO", header=FALSE,colClasses=c("integer","integer","integer","integer"))
colnames(rawSL) <- cols
survtimeSL <- ddply(rawSL, "Iteration", summarize, max = max(ExposureDay))
maxtime <- 365*2
extinct_threshold <- 42
survtimeSL$extinct <- 0
survtimeSL$extinct[survtimeSL$max<(maxtime-extinct_threshold)] <- 1
## Sierra Leone Information ##
xlimit <- max(survtimeSL$max)+10
b <- survfit(Surv(survtimeSL$max,survtimeSL$extinct)~1)
plot(b,xlab="Epidemic Duration (Days)",ylab="Proportion of Epidemics Ongoing",
lwd=c(3,1,1),col=c("darkred","grey30","grey30"),xlim=c(0,xlimit), mark.time=FALSE)
legend("topright", c("Kaplan-Meier Estimate","95% CI"), lwd=2, col=c("darkred","grey30"),
lty=c(1,2), bty='n', cex=1)
median(survtimeSL$max)
min(survtimeSL$max)
max(survtimeSL$max)
1 - mean(survtimeSL$extinct)
frequenciesSL <- freq(rawSL$Iteration, plot = FALSE)
plot(density(log(frequenciesLiberia[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n', cex=1)
plot(density(log(frequenciesLiberia[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n')
plot(density(log(frequenciesLiberia[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n')
library(plyr)
library(survival)
library(descr)
cols <- c("ID","Iteration","ExposureDay","Infector")
rawLiberia <- read.table("/Users/elofgren/Documents/Code/DTRA_StochExtinction/Results/BigStoch_Liberia.EFO", header=FALSE,colClasses=c("integer","integer","integer","integer"))
colnames(rawLiberia) <- cols
survtimeLiberia <- ddply(rawLiberia, "Iteration", summarize, max = max(ExposureDay))
maxtime <- 365*2
extinct_threshold <- 42
survtimeLiberia$extinct <- 0
survtimeLiberia$extinct[survtimeLiberia$max<(maxtime-extinct_threshold)] <- 1
# Historical Outbreak Information
episize <- c(67,77,24,32,149,264,17,35,143,122,425,60,2,37,315,1+runif(n=1,min=0,max=0.5),52,34,1+runif(n=1,min=0,max=0.5),318,284,3652,10666,12827,1+runif(n=1,min=0,max=0.5),8,20,1+runif(n=1,min=0,max=0.5),1+runif(n=1,min=0,max=0.5),1+runif(n=1,min=0,max=0.5),6,4)
epitime <- (77)
## Liberia Information ##
xlimit <- max(survtimeLiberia$max)+10
b <- survfit(Surv(survtimeLiberia$max,survtimeLiberia$extinct)~1)
plot(b,xlab="Epidemic Duration (Days)",ylab="Proportion of Epidemics Ongoing",
lwd=c(3,1,1),col=c("darkred","grey30","grey30"),xlim=c(0,xlimit), mark.time=FALSE)
legend("topright", c("Kaplan-Meier Estimate","95% CI"), lwd=2, col=c("darkred","grey30"),
lty=c(1,2), bty='n', cex=1)
median(survtimeLiberia$max)
min(survtimeLiberia$max)
max(survtimeLiberia$max)
1 - mean(survtimeLiberia$extinct)
frequenciesLiberia <- freq(rawLiberia$Iteration, plot = FALSE)
plot(density(log(frequenciesLiberia[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n', cex=1)
rawSL <- read.table("/Users/elofgren/Documents/Code/DTRA_StochExtinction/Results/BigStoch_SL.EFO", header=FALSE,colClasses=c("integer","integer","integer","integer"))
colnames(rawSL) <- cols
survtimeSL <- ddply(rawSL, "Iteration", summarize, max = max(ExposureDay))
maxtime <- 365*2
extinct_threshold <- 42
survtimeSL$extinct <- 0
survtimeSL$extinct[survtimeSL$max<(maxtime-extinct_threshold)] <- 1
## Sierra Leone Information ##
xlimit <- max(survtimeSL$max)+10
b <- survfit(Surv(survtimeSL$max,survtimeSL$extinct)~1)
plot(b,xlab="Epidemic Duration (Days)",ylab="Proportion of Epidemics Ongoing",
lwd=c(3,1,1),col=c("darkred","grey30","grey30"),xlim=c(0,xlimit), mark.time=FALSE)
legend("topright", c("Kaplan-Meier Estimate","95% CI"), lwd=2, col=c("darkred","grey30"),
lty=c(1,2), bty='n', cex=1)
median(survtimeSL$max)
min(survtimeSL$max)
max(survtimeSL$max)
1 - mean(survtimeSL$extinct)
frequenciesSL <- freq(rawSL$Iteration, plot = FALSE)
plot(density(log(frequenciesLiberia[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n')
frequenciesSL <- freq(rawSL$Iteration, plot = FALSE)
plot(density(log(frequenciesSL[,1]),from=0,kernel="gaussian"),xlim=c(0,15),
ylab="Frequency",xlab="log(Epidemic Size)",
lwd=3,main="",col="darkred")
#abline(v=log(episize),col="grey30")
legend("topright","Kernel Density Estimate", lwd=2, col="darkred",
lty=1, bty='n')
install.packages("plotrix")
library(plotrix)
?gap.barplot
dat <- read.table(text = "SARS HIV EBOLA
1 1000 2000 1500
2 1 3 2", header = TRUE)
barplot(as.matrix(dat))
axis.break(1,2,style="slash")
?axis.break
library(plotrix)
dat <- read.table(text = "SARS HIV EBOLA
1 1000 2000 1500
2 1 3 2", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = "SARS HIV EBOLA
1 100 200 150a
2 1 3 2", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = "SARS HIV EBOLA
1 100 200 150
2 1 3 2", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = "SARS HIV EBOLA
1 1 3 2
2 100 97 80", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = "AIDS(H)", "No AIDS(H)","AIDS(L)","No AIDS(L)"
1 1 3 2
2 100 97 80", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = "AIDS(H)", "No AIDS(H)","AIDS(L)","No AIDS(L)"
1 1 3 2
2 100 97 80, header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = "AIDS(H)", "No AIDS(H)","AIDS(L)","No AIDS(L)",
1 1 3 2
2 100 97 80, header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = AIDS(H) NoAIDS(H) AIDS(L) NoAIDS(L)
1 1 3 2
2 100 97 80", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = AIDSH NoAIDSH AIDSL NoAIDSL
0.0002772 0 0.0001803 0
0.0070565 0 0.0045890 0
0.0020187 0.0027783 0.0013281 0.0018278
0.9906476 0.9972217 0.9939027 0.9981722
", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = "AIDSH NoAIDSH AIDSL NoAIDSL
0.0002772 0 0.0001803 0
0.0070565 0 0.0045890 0
0.0020187 0.0027783 0.0013281 0.0018278
0.9906476 0.9972217 0.9939027 0.9981722
", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,5,style="slash")
library(plotrix)
dat <- read.table(text = "AIDSH NoAIDSH AIDSL NoAIDSL
0.0002772 0 0.0001803 0
0.0070565 0 0.0045890 0
0.0020187 0.0027783 0.0013281 0.0018278
0.9906476 0.9972217 0.9939027 0.9981722
", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,0.005,style="slash")
library(plotrix)
dat <- read.table(text = "AIDSH NoAIDSH AIDSL NoAIDSL
0.0002772 0 0.0001803 0
0.0070565 0 0.0045890 0
0.0020187 0.0027783 0.0013281 0.0018278
0.9906476 0.9972217 0.9939027 0.9981722
", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,0.0005,style="slash")
axis.break(2,0.005,style="slash")
library(plotrix)
dat <- read.table(text = "AIDSH NoAIDSH AIDSL NoAIDSL
0.0002772 0 0.0001803 0
0.0070565 0 0.0045890 0
0.0020187 0.0027783 0.0013281 0.0018278
0.9906476 0.9972217 0.9939027 0.9981722
", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,0.005,style="slash")
?axis.breakl
?axis.break
library(plotrix)
dat <- read.table(text = "AIDSH NoAIDSH AIDSL NoAIDSL
0.0002772 0 0.0001803 0
0.0070565 0 0.0045890 0
0.0020187 0.0027783 0.0013281 0.0018278
0.9906476 0.9972217 0.9939027 0.9981722
", header = TRUE)
barplot(as.matrix(dat))
axis.break()
#axis.break(2,0.005,style="slash")
library(plotrix)
dat <- read.table(text = "AIDSH NoAIDSH AIDSL NoAIDSL
0.0002772 0 0.0001803 0
0.0070565 0 0.0045890 0
0.0020187 0.0027783 0.0013281 0.0018278
0.9906476 0.9972217 0.9939027 0.9981722
", header = TRUE)
barplot(as.matrix(dat))
axis.break(2,0.005,style="gap")
gap.plot(as.matrix(dat), gap=c(0.005,0.98))
gap.plot?
?gap.plot
gap.barplot(as.matrix(dat), gap=c(0.005,0.98))
?gap.barplot
?barplot
gap.barplot(as.matrix(dat), gap=c(0.005,0.98),beside=FALSE)
barplot(as.matrix(dat))
twogrp<-c(rnorm(10)+4,rnorm(10)+20)
gap.barplot(twogrp,gap=c(8,16),xlab="Index",ytics=c(3,6,17,20),
ylab="Group values",main="Barplot with gap")
library(survival)
data(ovarian)
head(ovarian)
survival.weibull <- survreg(Surv(time, status) ~ ph.ecog + age + strata(sex),
dist='weibull', lung)
survival.logn <- survreg(Surv(time, status) ~ ph.ecog + age + strata(sex),
dist='lognormal', lung)
survival.logl <- survreg(Surv(time, status) ~ ph.ecog + age + strata(sex),
dist='loglogistic', lung)
survival.weibull
summary(survival.weibull)
extractAIC(survival.weibull)
extractAIC(survival.longn)
extractAIC(survival.logn)
extractAIC(survival.logl)
185+14
Top10 <- read.csv("/Users/elofgren/Desktop/SynPop/SyntheticArlington_HomeLocs.csv")
View(Top10)
View(Top10)
library(maps)
library(mapdata)
Top10 <- read.csv("/Users/elofgren/Desktop/SynPop/SyntheticArlington_HomeLocs.csv")
map('state', region="Virginia",col="lightgray",fill=TRUE)
title("None of These Things")
points(Top10$LONGITUDE,Top10$LATITUDE, pch=19,col='black')
legend("topleft", pch = c(19),
col = c("black"),
legend = c("Hospital"), bty='n')
install.packages("maps")
install.packages("mapd")
install.packages("mapdata")
library(maps)
library(mapdata)
library(maps)
library(mapdata)
Top10 <- read.csv("/Users/elofgren/Desktop/SynPop/SyntheticArlington_HomeLocs.csv")
map('state', region="Virginia",col="lightgray",fill=TRUE)
title("None of These Things")
points(Top10$LONGITUDE,Top10$LATITUDE, pch=19,col='black')
legend("topleft", pch = c(19),
col = c("black"),
legend = c("Hospital"), bty='n')
test <-read.csv("/Users/elofgren/Desktop/SynPop/SyntheticArlington_Person_Info.csv")
hist(test$AGE)
# Load Necessary Packages
library(irr)
library(gplots)
# Correlations are from Hannah's report
corr <- matrix(nrow=4,ncol=4,byrow = TRUE)
corr[1,1] <- 1
corr[2,2] <- 1
corr[3,3] <- 1
corr[4,4] <- 1
corr[1,2] <- 0.627
corr[1,3] <- 0.477
corr[1,4] <- 0.113
corr[2,1] <- 0.627
corr[2,3] <- 0.489
corr[2,4] <- 0.102
corr[3,1] <- 0.477
corr[3,2] <- 0.489
corr[3,4] <- 0.146
corr[4,1] <- 0.113
corr[4,2] <- 0.102
corr[4,3] <- 0.146
row.names(corr) <- c("Self Prevent", "Others Prevent", "Obey Public Health Advisory", "Chronic Condition")
colnames(corr) <- c("Self Prevent", "Others Prevent", "Obey Public Health Advisory", "Chronic Condition")
myCol <- c("white", "grey90", "grey70", "grey50", "grey30", "grey10", "black")
myBreaks <- c(0, 0.10, 0.20, 0.30, 0.40, 0.50,0.75,1)
heatmap.2(corr, col=myCol, dendrogram='none', trace='none',breaks=myBreaks,key="none",
Rowv = NA, Colv = NA, margins=c(12,15), cexRow = 1, cexCol=1, symm=TRUE, density.info="none",srtRow = 45, srtCol=45)
legend("left", fill = myCol,
legend = c("0 to 0.09","0.10 to 0.19","0.20 to 0.29","0.30 to 0.39","0.40 to 0.49","0.50 to 0.74","0.75 to 1"),
ncol=1, cex=0.80,bty='n',title="Correlation")
# Load Necessary Packages
library(irr)
library(gplots)
# Correlations are from Hannah's report
corr <- matrix(nrow=4,ncol=4,byrow = TRUE)
corr[1,1] <- 1
corr[2,2] <- 1
corr[3,3] <- 1
corr[4,4] <- 1
corr[1,2] <- 0.627
corr[1,3] <- 0.477
corr[1,4] <- 0.113
corr[2,1] <- 0.627
corr[2,3] <- 0.489
corr[2,4] <- 0.102
corr[3,1] <- 0.477
corr[3,2] <- 0.489
corr[3,4] <- 0.146
corr[4,1] <- 0.113
corr[4,2] <- 0.102
corr[4,3] <- 0.146
row.names(corr) <- c("Self Prevent", "Others Prevent", "Obey Public Health Advisory", "Chronic Condition")
colnames(corr) <- c("Self Prevent", "Others Prevent", "Obey Public Health Advisory", "Chronic Condition")
myCol <- c("white", "grey90", "grey70", "grey50", "grey30", "grey10", "black")
myBreaks <- c(0, 0.20,0.40,0.60,0.80)
heatmap.2(corr, col=myCol, dendrogram='none', trace='none',breaks=myBreaks,key="none",
Rowv = NA, Colv = NA, margins=c(12,15), cexRow = 1, cexCol=1, symm=TRUE, density.info="none",srtRow = 45, srtCol=45)
legend("left", fill = myCol,
legend = c("0 to 0.09","0.10 to 0.19","0.20 to 0.29","0.30 to 0.39","0.40 to 0.49","0.50 to 0.74","0.75 to 1"),
ncol=1, cex=0.80,bty='n',title="Correlation")
# Load Necessary Packages
library(irr)
library(gplots)
# Correlations are from Hannah's report
corr <- matrix(nrow=4,ncol=4,byrow = TRUE)
corr[1,1] <- 1
corr[2,2] <- 1
corr[3,3] <- 1
corr[4,4] <- 1
corr[1,2] <- 0.627
corr[1,3] <- 0.477
corr[1,4] <- 0.113
corr[2,1] <- 0.627
corr[2,3] <- 0.489
corr[2,4] <- 0.102
corr[3,1] <- 0.477
corr[3,2] <- 0.489
corr[3,4] <- 0.146
corr[4,1] <- 0.113
corr[4,2] <- 0.102
corr[4,3] <- 0.146
row.names(corr) <- c("Self Prevent", "Others Prevent", "Obey Public Health Advisory", "Chronic Condition")
colnames(corr) <- c("Self Prevent", "Others Prevent", "Obey Public Health Advisory", "Chronic Condition")
myCol <- c("white", "grey90", "grey70", "grey50", "grey30")
myBreaks <- c(0, 0.20,0.40,0.60,0.80)
heatmap.2(corr, col=myCol, dendrogram='none', trace='none',breaks=myBreaks,key="none",
Rowv = NA, Colv = NA, margins=c(12,15), cexRow = 1, cexCol=1, symm=TRUE, density.info="none",srtRow = 45, srtCol=45)
legend("left", fill = myCol,
legend = c("0 to 0.09","0.10 to 0.19","0.20 to 0.29","0.30 to 0.39","0.40 to 0.49","0.50 to 0.74","0.75 to 1"),
ncol=1, cex=0.80,bty='n',title="Correlation")
# Load Necessary Packages
library(irr)
library(gplots)
# Correlations are from Hannah's report
corr <- matrix(nrow=4,ncol=4,byrow = TRUE)
corr[1,1] <- 1
corr[2,2] <- 1
corr[3,3] <- 1
corr[4,4] <- 1
corr[1,2] <- 0.627
corr[1,3] <- 0.477
corr[1,4] <- 0.113
corr[2,1] <- 0.627
corr[2,3] <- 0.489
corr[2,4] <- 0.102
corr[3,1] <- 0.477
corr[3,2] <- 0.489
corr[3,4] <- 0.146
corr[4,1] <- 0.113
corr[4,2] <- 0.102
corr[4,3] <- 0.146
row.names(corr) <- c("Self Prevent", "Others Prevent", "Obey Public Health Advisory", "Chronic Condition")
colnames(corr) <- c("Self Prevent", "Others Prevent", "Obey Public Health Advisory", "Chronic Condition")
myCol <- c("white", "grey90", "grey70", "grey50", "grey30", "grey10", "black")
myBreaks <- c(0, 0.10, 0.20, 0.30, 0.40, 0.50,0.75,1)
heatmap.2(corr, col=myCol, dendrogram='none', trace='none',breaks=myBreaks,key="none",
Rowv = NA, Colv = NA, margins=c(12,15), cexRow = 1, cexCol=1, symm=TRUE, density.info="none",srtRow = 45, srtCol=45)
legend("left", fill = myCol,
legend = c("0 to 0.09","0.10 to 0.19","0.20 to 0.29","0.30 to 0.39","0.40 to 0.49","0.50 to 0.74","0.75 to 1"),
ncol=1, cex=0.80,bty='n',title="Correlation")
randint(10)
runifa(10)
runif(10)
a <- runif(1000)
b <- exp(a)
plot(density(b))
a <- runif(1000)
b <- log(a)
plot(density(b))
`201602_monthly_report` <- read.csv("~/Desktop/201602_monthly_report.csv")
View(`201602_monthly_report`)
sort1'<- `201602_monthly_report`[order(case2, isolate, MIC_comment), ] #to sort
sort1<- '201602_monthly_report'[order(case2, isolate, MIC_comment), ] #to sort
`201602_monthly_report` <- read.csv("~/Desktop/201602_monthly_report.csv")
View(`201602_monthly_report`)
sort1<- '201602_monthly_report'[order(case, isolate, MIC_comment), ] #to sort
View(`201602_monthly_report`)
View(`201602_monthly_report`)
sort1<- '201602_monthly_report'[order(quarter, isolate, MIC_comment), ] #to sort
data <- read.csv("~/Desktop/201602_monthly_report.csv")
sort1<- data[order(case2, isolate, MIC_comment), ]
View(data)
View(data)
sort1<- data[order(case, isolate, MIC_comment), ]
sort1<- data[order(datacase, isolate, MIC_comment), ]
sort1<- data[order(data$case, isolate, MIC_comment), ]
sort1<- data[order(data$case, data$isolate, data$MIC_comment), ]
View(sort1)
View(sort1)
sort2<-sort1[ !duplicated(sort1$MIC_comment), ]
View(sort2)
View(sort2)
?melt
??melt
install.packages("reshape2")
library(reshape2)
?cast
setwd("~/Documents/Code/LVO_DeeperLook")
library(vioplot)
Pairs <- read.csv("~/Documents/Code/LVO_DeeperLook/PairwiseDiff.csv")
Pairs <- na.omit(Pairs)
Pairs <- abs(Pairs)
vioplot(Pairs$Round1,Pairs$Round2,Pairs$Round3,Pairs$Round4,Pairs$Round5,Pairs$Round6,
col="Grey",drawRect = "False", names=c("Round 1","Round 2","Round 3","Round 4","Round 5","Round 6"))
title(ylab="Score Difference",xlab="Round")
abline(h=7.015,col="red3",lwd=3,lty=2)
legend("topright",c("Mean Difference"),lwd=3,col=c("Red3"),lty=c(2),bty='y')
View(Pairs)
